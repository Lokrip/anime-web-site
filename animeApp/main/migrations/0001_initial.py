# Generated by Django 5.0.3 on 2024-08-15 11:06

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import mptt.fields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=150, verbose_name='Имя Жанра')),
                ('slug', models.SlugField(blank=True, editable=False, help_text='Уникальный идентификатор категории для URL', max_length=150, unique=True, verbose_name='URL')),
            ],
            options={
                'verbose_name': 'Жанр',
                'verbose_name_plural': 'Жанры',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Studio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=120, verbose_name='Studio Name')),
                ('slug', models.SlugField(blank=True, editable=False, help_text='Уникальный идентификатор категории для URL', max_length=150, unique=True, verbose_name='URL')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создание')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
            ],
            options={
                'verbose_name': 'Студия',
                'verbose_name_plural': 'Студия',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='TypeAnime',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=150, verbose_name='Имя Типа')),
                ('slug', models.SlugField(blank=True, editable=False, help_text='Уникальный идентификатор категории для URL', max_length=150, unique=True, verbose_name='URL')),
            ],
            options={
                'verbose_name': 'Тип',
                'verbose_name_plural': 'Типы',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('is_author', models.BooleanField(default=False)),
                ('is_subscriber', models.BooleanField(default=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Anime',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(db_index=True, max_length=150, verbose_name='Название аниме')),
                ('description', models.TextField(blank=True, help_text='Краткое описание аниме.', verbose_name='Описание')),
                ('release_date', models.DateField(blank=True, help_text='Дата выпуска аниме', null=True, verbose_name='Дата выпуска')),
                ('status', models.CharField(choices=[('AIR', 'Airing'), ('COM', 'Completed'), ('ONH', 'On Hold'), ('DRO', 'Dropped'), ('PTW', 'Plan to Watch')], default='PTW', help_text='Текущий статус выхода аниме.', max_length=3, verbose_name='Status')),
                ('score', models.FloatField(blank=True, help_text='Средний балл аниме сериала', null=True, verbose_name='Score')),
                ('rating', models.FloatField(blank=True, help_text='Средний рейтинг сериала', null=True, verbose_name='Rating')),
                ('image', models.ImageField(blank=True, default='default_image/images.png', help_text='Изоброжение для Аниме', null=True, upload_to='anime_images/%Y/%m/%d/', verbose_name='Изоброжение')),
                ('views', models.PositiveIntegerField(default=0, help_text='Просмотры аниме', verbose_name='Просмотры')),
                ('slug', models.SlugField(blank=True, editable=False, help_text='Уникальный идентификатор категории для URL', max_length=150, unique=True, verbose_name='URL')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создание')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
                ('genre', models.ManyToManyField(help_text='Жанры, связанные с аниме.', related_name='animes', to='main.genre', verbose_name='Genres')),
                ('type_anime', models.ForeignKey(blank=True, help_text='Типы для аниме', null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.typeanime', verbose_name='Тип аниме')),
            ],
            options={
                'verbose_name': 'Аниме',
                'verbose_name_plural': 'Аниме',
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='Categories',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=120, verbose_name='Категория')),
                ('slug', models.SlugField(blank=True, editable=False, help_text='Уникальный идентификатор категории для URL', max_length=150, unique=True, verbose_name='URL')),
                ('description', models.TextField(blank=True, help_text='Подробное описание категории', verbose_name='Описание')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создание')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(editable=False)),
                ('parent', mptt.fields.TreeForeignKey(blank=True, help_text='Родительская категория (если есть)', null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.categories', verbose_name='Родительская категория')),
            ],
            options={
                'verbose_name': 'Категория',
                'verbose_name_plural': 'Категории',
                'ordering': ['name'],
                'indexes': [models.Index(fields=['name'], name='main_catego_name_f83ece_idx'), models.Index(fields=['slug'], name='main_catego_slug_8fa509_idx')],
            },
        ),
    ]
